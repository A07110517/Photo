Использование сторонних библиотек
=================================

Yii изначально спроектирован таким образом, чтобы использование сторонних библиотек
с целью расширения функционала Yii, происходило легко и непринужденно.
Очень часто при использовании в работе сторонних библиотек, разработчики сталкиваются с проблемами
именования классов и подключения файлов. Поскольку все классы Yii имеют префикс `C`, то вероятность
возникновения конфликтов имен существенно ниже. А благодаря тому, что для подключения файлов Yii
использует [автозагрузку SPL](http://php.net/manual/en/function.spl-autoload.php), работа с библиотеками,
использующими для подключения файлов классов этот механизм автозагрузки или же относительный путь
подключения в РНР (PHP include path), становится существенно приятнее.

Ниже приведен пример, иллюстрирующий использование в Yii-приложении компонента
[Zend_Search_Lucene](http://www.zendframework.com/manual/en/zend.search.lucene.html)
из [Zend framework](http://www.zendframework.com).

Первым делом, распаковываем релиз с Zend framework в папку `protected/vendors`, где `protected` —
это [базовая директория приложения](/doc/guide/basics.application#application-base-directory).
Убедитесь в том, что файл `protected/vendors/Zend/Search/Lucene.php` существует.

Далее, в самом начале класса контроллера, добавляем строку:

~~~
[php]
Yii::import('application.vendors.*');
require_once('Zend/Search/Lucene.php');
~~~

Код, приведенный выше, подключает файл класса `Lucene.php`. Поскольку используется относительный путь,
то необходимо изменить относительный путь подключения в РНР (PHP include path) таким образом, чтобы приложение могло
найти файл. Делается это путем вызова метода `Yii::import` перед  `require_once`.

После того, как проделано все описанное, можно использовать класс `Lucene` в действиях контроллера следующим образом:

~~~
[php]
$lucene=new Zend_Search_Lucene($pathOfIndex);
$hits=$lucene->find(strtolower($keyword));
~~~

Использование Yii в сторонних системах
--------------------------------------

Yii может быть использован как библиотека для разработки и улучшения
сторонних систем, таких как WordPress, Joomla и других. Для того, чтобы
воспользоваться Yii необходимо включить приведённый ниже код в стороннюю систему:

~~~
[php]
require_once('путь/к/yii.php');
Yii::createWebApplication('путь/к/config.php');
~~~

Данный код очень похож на тот, который используется в `index.php` обычного
приложения. Отличие в том, что после создания экземпляра приложения не вызывается
метод `run()`.

Теперь при разработке сторонней системы можно использовать большинство
возможностей Yii. Например, для получения доступа к экземпляру приложения
можно использовать `Yii::app()`. Также можно использовать DAO, ActiveRecord
модели, валидацию и т.д.

<div class="revision">$Id: extension.integration.txt 2953 2011-02-11 15:52:21Z qiang.xue $</div>